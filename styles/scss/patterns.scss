@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
    $x1: $x0 - ($x0 * $x0 - abs($r)) / (2 * $x0);
    $x0: $x1;
  }

  @return $x1;
}

@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

@function square($number) {
  $unitless: strip-units($number);
  @return ($unitless * $unitless);
}

@function get-unit($number) {
  @return unit($number);
}

@function get-hypotenuse($ab, $ac) {
  @if get-unit($ab) == get-unit($ac) {
    @return sqrt(square($ab) + square($ac)) + unquote(get-unit($ab));
  } @else {
    @error 'The two value into the get-hypotenuse() function must share the same unit type';
  }
}

/*-------------*/
@function hexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}
$primary: #898df8;

:root {
  --primary: #{$primary};
  --primary-rgb: #{hexToRGB(#03a87c)};
}
.block {
  background-color: rgba(var(--primary-rgb), 0.3);
}
/*-------------*/
$box: 64px;
/*
$stop: get-hypotenuse(64px, 64px);
$start: get-hypotenuse(64px, 64px);
*/
:root {
  --color-background: #fff;
  --color-alpha-light: 0.55;
  --color-alpha-extralight: 0.5;
  --color-vertical-lines: rgba(255, 255, 255, var(--color-alpha-extralight));
  --color-horizontal-lines: rgba(255, 255, 255, var(--color-alpha-extralight));
  --color-diagonal-lines: rgba(255, 255, 255, var(--color-alpha-light));

  --line-thickness-1: 1px;

  --box-size: 64px;

  --stop: 44px;
  --start: 45px;
}
body {
  background-color: #111213;
}
/* a few variables...*/
:root {
  --color-background: #010101;
  --color-alpha-light: 0.25;
  --color-alpha-extralight: 0.25;
  --color-vertical-lines: rgba(255, 255, 255, var(--color-alpha-extralight));
  --color-horizontal-lines: rgba(255, 255, 255, var(--color-alpha-extralight));
  --color-diagonal-lines: rgba(255, 255, 255, var(--color-alpha-light));
  --line-thickness-1: 1px;
  --box-size: 64px;
}
body,
.grid_cell {
  background-image: linear-gradient(
      var(--color-vertical-lines) var(--line-thickness-1),
      transparent var(--line-thickness-1)
    ),
    linear-gradient(
      90deg,
      var(--color-horizontal-lines) var(--line-thickness-1),
      transparent var(--line-thickness-1)
    );

  /*---
    ,
    linear-gradient(
      45deg,
      transparent var(--line-thickness-1),
      transparent 44px,
      var(--color-diagonal-lines) 45px,
      transparent var(--line-thickness-1)
    ),
    linear-gradient(
      -45deg,
      transparent var(--line-thickness-1),
      transparent 44px,
      var(--color-diagonal-lines) 45px,
      transparent var(--line-thickness-1)
    )
    ---*/
  background-size: var(--box-size) var(--box-size),
    var(--box-size) var(--box-size), var(--box-size) var(--box-size),
    var(--box-size) var(--box-size);
  background-position: 0 0, -0.5px 0, 0 0, 0 0;
}
.radial-overlay {
  /*-- This adds a gradient over the body bg
   making it look like the pattern fades away --*/
  /*
  background-image: linear-gradient(
    180deg,
    rgba(2, 0, 36, 1) 0%,
    rgba(0, 0, 0, 0) 0%,
    rgba(0, 0, 0, 1) 100%
  );
  */

  background: radial-gradient(
    circle,
    rgba(0, 0, 0, 0) 0%,
    rgba(0, 0, 0, 1) 100%
  );
}

.box {
  width: 64px;
  height: 64px;

  background-color: hotpink;
}
